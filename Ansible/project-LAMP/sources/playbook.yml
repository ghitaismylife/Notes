---

# WEB SERVER
- hosts: web
  become: true
  vars_files: vars/main.yml


  tasks:
  - name: install apache and php last version
    apt:
      name:
        - apache2
        - php
        - php-mysql
      state: present
      update_cache: yes
    when: ansible_facts['os_family']=="Debian"


  - name: install extra pckages
    apt:
      name: "{{extra_packages_debian}}"
      state: present
    when: ansible_facts['os_family']=="Debian"

  - name: add users
    user:
      name: "{{ item }}"
      state: present
    loop:
      - user1
      - user2

  - name: Give writable mode to http folder
    file:
      path: /var/www/html
      state: directory
      mode: '0755'


  - name: remove default index.html
    file:
      path: /var/www/html/index.html
      state: absent

  - name: upload web app source
    copy:
      src: app/
      dest: /var/www/html/

  - name: deploy php database config
    template:
      src: "db-config.php.j2"
      dest: "/var/www/html/db-config.php"
  
  - name: ensure apache service is start
    service:
      name: apache2
      state: started
      enabled: yes
    when: ansible_facts['os_family']=="Debian"
  

# DATABASE SERVER

- hosts: db
  become: true
  vars_files: vars/main.yml
  vars:
    root_password: "my_secret_password"

  tasks:
  - name: install mysql
    apt:
      name: 
        - mysql-server
        - "{{ mysql_python_package }}"
      state: present
      update_cache: yes 
    when: ansible_facts['os_family']=="Debian"

  - name: Create MySQL client config
    copy:
      dest: "/root/.my.cnf"
      content: |
        [client]
        user=root
        password={{ root_password }}
      mode: 0400
    when: ansible_facts['os_family']=="Debian"

  - name: Allow external MySQL connections (1/2)
    lineinfile:
      path: /etc/mysql/mysql.conf.d/mysqld.cnf
      regexp: '^skip-external-locking'
      line: "# skip-external-locking"
    notify: Restart mysql

  - name: Allow external MySQL connections (2/2)
    lineinfile:
      path: /etc/mysql/mysql.conf.d/mysqld.cnf
      regexp: '^bind-address'
      line: "# bind-address"
    notify: Restart mysql

  - name: upload sql table config
    template:
      src: "table.sql.j2"
      dest: "/tmp/table.sql"

  - name: add sql table to database
    mysql_db:
      name: "{{ mysql_dbname }}"
      state: present
      login_user: root
      login_password: '{{ root_password }}'
      state: import 
      target: /tmp/table.sql

  - name: "Create {{ mysql_user }} with all {{ mysql_dbname }} privileges"
    mysql_user:
      name: "{{ mysql_user }}"
      password: "{{ mysql_password }}"
      priv: "{{ mysql_dbname }}.*:ALL"
      host: "{{ webserver_host }}"
      state: present
      login_user: root
      login_password: '{{ root_password }}'
      login_unix_socket: /var/run/mysqld/mysqld.sock
    when: ansible_facts['os_family']=="Debian"
    notify: Restart mysql

  handlers:
    - name: Restart mysql
      service:
        name: mysql
        state: restarted
      when: ansible_facts['os_family']=="Debian"

