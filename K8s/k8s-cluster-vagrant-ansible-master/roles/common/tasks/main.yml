---
- name: Remove old Kubernetes repository if exists
  apt_repository:
    repo: 'deb https://apt.kubernetes.io/ kubernetes-focal main'
    state: absent

- name: Remove old Docker repository if exists
  apt_repository:
    repo: 'deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable'
    state: absent

- name: Update apt package index
  apt:
    update_cache: yes

- name: Install necessary packages for Docker installation
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - software-properties-common
    state: present

- name: Ensure keyring directory exists
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Add Kubernetes GPG key
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    keyring: /etc/apt/keyrings/kubernetes.gpg
    state: present



- name: Add Jenkins GPG key
  apt_key:
    url: https://pkg.jenkins.io/debian/jenkins.io.key
    keyring: /etc/apt/keyrings/jenkins.gpg
    state: present



- name: Add Dockerâ€™s official GPG key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    keyring: /etc/apt/keyrings/docker.gpg
    state: present

- name: Add Docker repository
  apt_repository:
    repo: 'deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable'
    state: present

- name: Update apt package index again
  apt:
    update_cache: yes

- name: Install Docker Engine
  apt:
    name: docker-ce
    state: present

- name: Ensure Docker service is started and enabled
  systemd:
    name: docker
    state: started
    enabled: yes



- name: Remove swapfile from /etc/fstab
  mount:
    name: "{{ item }}"
    fstype: swap
    state: absent
  with_items:
    - swap
    - none


- name: Disable swap
  command: swapoff -a
  when: ansible_swaptotal_mb > 0


- name: Install Kubernetes binaries
  apt: 
    name="{{ item.name }}"
    state=present
    update_cache=yes
  with_items: "{{ k8s_packages | default([]) }}"

- name: Configure node ip
  lineinfile:
    path: '/etc/systemd/system/kubelet.service.d/10-kubeadm.conf'
    line: 'Environment="KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}"'
    regexp: 'KUBELET_EXTRA_ARGS='
    insertafter: '\[Service\]'
    state: present
  notify:
    - restart kubelet
