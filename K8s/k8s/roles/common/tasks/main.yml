---


- name: Remove old Docker repository if exists
  apt_repository:
    repo: 'deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable'
    state: absent

- name: Update apt package index
  apt:
    update_cache: yes

- name: Install necessary packages for Docker installation
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - software-properties-common
    state: present

- name: Ensure keyring directory exists
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Add Kubernetes GPG key
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    keyring: /etc/apt/keyrings/kubernetes.gpg
    state: present



- name: Add Jenkins GPG key
  apt_key:
    url: https://pkg.jenkins.io/debian/jenkins.io.key
    keyring: /etc/apt/keyrings/jenkins.gpg
    state: present



- name: Add Dockerâ€™s official GPG key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    keyring: /etc/apt/keyrings/docker.gpg
    state: present

- name: Add Docker repository
  apt_repository:
    repo: 'deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable'
    state: present

- name: Update apt package index again
  apt:
    update_cache: yes

#- name: Install Docker Engine
 # apt:
 #  name: docker-ce
  # state: present
- name: Ensure Docker daemon.json is configured correctly
  template:
        src: daemon.json.j2
        dest: /etc/docker/daemon.json
        mode: '0644'

- name: Ensure Docker service is started and enabled
  systemd:
    name: docker
    state: started
    enabled: yes



- name: Remove swapfile from /etc/fstab
  mount:
    name: "{{ item }}"
    fstype: swap
    state: absent
  with_items:
    - swap
    - none


- name: Check current swap usage
  command: swapon --show
  register: swap_status
  failed_when: false

- name: Display current swap usage
  debug:
    msg: "{{ swap_status.stdout }}"

- name: Attempt to disable swap
  command: swapoff -a
  register: swapoff_result
  failed_when: swapoff_result.rc != 0

- name: Display swapoff result
  debug:
    msg: "{{ swapoff_result.stdout }}"

- name: Investigate if swapoff failed
  when: swapoff_result.rc != 0
  debug:
    msg: "Swapoff failed with return code {{ swapoff_result.rc }}. Check system resources and logs."



- name: Install Kubernetes binaries
  apt: 
    name="{{ item.name }}"
    state=present
    update_cache=yes
  with_items: "{{ k8s_packages | default([]) }}"

- name: Ensure kubelet service directory exists
  file:
    path: /etc/systemd/system/kubelet.service.d/
    state: directory
- name: Empty the file
  copy:
        content: ""
        dest: /etc/docker/daemon.json
        mode: '0644'

- name: Ensure Docker daemon.json is configured correctly
  template:
        src: daemon.json.j2
        dest: /etc/docker/daemon.json
        mode: '0644'

- name: Create kubelet configuration file with default content
  copy:

    dest: '/etc/systemd/system/kubelet.service.d/10-kubeadm.conf'
    content: |
      [Service]
      Environment="KUBELET_EXTRA_ARGS=--node-ip={{node_ip}}"
    owner: root
    group: root
    mode: '0644'
  vars:
    node_ip: '192.168.1.100'


